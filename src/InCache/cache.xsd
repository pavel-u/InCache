<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:complexType name="argumentType">
        <xs:annotation>
            <xs:documentation>
                Simple key/value argument type
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="name"/>
                <xs:attribute type="xs:string" name="value"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="configType">
        <xs:annotation>
            <xs:documentation>
                Config values
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="argument" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="typesType">
        <xs:annotation>
            <xs:documentation>
                InCache types
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="type">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element ref="argument" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                    <xs:attribute type="xs:string" name="name"/>
                    <xs:attribute type="xs:string" name="driver"/>
                    <xs:attribute type="xs:string" name="pool"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="evictType">
        <xs:annotation>
            <xs:documentation>
                Type of methods which are should invalidate some cache
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="class"/>
                <xs:attribute type="xs:string" name="method"/>
                <xs:attribute type="xs:string" name="key"/>
                <xs:attribute type="xs:string" name="type"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="cachingType">
        <xs:annotation>
            <xs:documentation>
                Type of methods which are going to be cached
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="class" use="required"/>
                <xs:attribute type="xs:string" name="method" use="required"/>
                <xs:attribute type="xs:string" name="type" use="required"/>
                <xs:attribute type="xs:int" name="ttl" use="optional"/>
                <xs:attribute type="xs:string" name="key" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:element name="argument" type="argumentType" />
    <xs:element type="configType" name="config" />
    <xs:element type="typesType" name="types" />
    <xs:element type="evictType" name="evict" />
    <xs:element type="cachingType" name="caching" />

    <xs:element name="cache">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="config" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="types" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="evict" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="caching" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
        <xs:keyref name="typeKeyRef" refer="typeKey">
            <xs:selector xpath="./evict" />
            <xs:field xpath="@type" />
        </xs:keyref>
        <xs:key name="typeKey">
            <xs:selector xpath="./types/*" />
            <xs:field xpath="@name" />
        </xs:key>
    </xs:element>
</xs:schema>