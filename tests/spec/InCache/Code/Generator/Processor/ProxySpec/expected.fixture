<?php

namespace Vendor;

class TestClass extends TestClass__Copy
{
    /**
     * @var \InCache\PoolFactory
     */
    protected $poolFactory;

    public function __construct()
    {
        $this->poolFactory = \InCache\PoolFactory::instance();
        return call_user_func_array(array('parent', '__construct'), func_get_args());
    }
    

    public function testEvictMethod($a = 3)
    {
        $result = call_user_func_array(array('parent', 'testEvictMethod'), func_get_args());
        $pool = $this->poolFactory->get('file');
        $item = $pool->getItem('someCacheIdentifier');
        $item->clear();
        return $result;
    }

    public function testMethod($a = 1)
    {
        $pool = $this->poolFactory->get('file');
        $item = $pool->getItem('someCacheIdentifier');
        if ($item->isMiss()) {
            $item->lock();
            $result = call_user_func_array(array('parent', 'testMethod'), func_get_args());
            $item->setKey(['stash_default', 'someCacheIdentifier']);
            $item->set($result, 5);
        }
        return $item->get();
    }

    public function testMethod2($a = 2)
    {
        $pool = $this->poolFactory->get('file');
        $item = $pool->getItem('TestClass/testMethod2/' . md5(serialize(func_get_args())));
        if ($item->isMiss()) {
            $item->lock();
            $result = call_user_func_array(array('parent', 'testMethod2'), func_get_args());
            
            $item->set($result, 5);
        }
        return $item->get();
    }
}